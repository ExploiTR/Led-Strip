#include <Arduino.h>
#include <IRremoteESP8266.h>
#include <IRutils.h>
#include <IRsend.h>
#include <ESP8266WiFi.h>
#include <stdlib.h>

const int kIrLed = 4;

#define IR_SEND_DUTY_CYCLE 50

int port = 2020;  
WiFiServer server(port);

IRsend irsend(kIrLed);

const uint16_t br_up[67] = {9048, 4508,  570, 612,  522, 612,  520, 612,  520, 612,  520, 612,  520, 612,  524, 608,  518, 616,  516, 1688,  540, 1688,  546, 1682,  550, 1680,  546, 612,  522, 1684,  546, 1684,  546, 1680,  550, 612,  516, 612,  526, 608,  518, 612,  522, 608,  522, 612,  518, 612,  526, 608,  518, 1686,  546, 1686,  542, 1686,  548, 1680,  550, 1684,  548, 1684,  542, 1686,  546, 1688,  544};
const uint16_t br_down[67] = {9086, 4478,  582, 578,  546, 588,  548, 580,  552, 578,  552, 582,  548, 582,  544, 586,  546, 584,  548, 1682,  550, 1678,  550, 1680,  554, 1680,  550, 584,  546, 1686,  548, 1682,  546, 1682,  548, 1684,  546, 588,  546, 584,  550, 580,  550, 580,  554, 584,  546, 584,  546, 586,  546, 584,  550, 1680,  550, 1680,  548, 1680,  550, 1684,  550, 1682,  554, 1676,  550, 1682,  550};
const uint16_t off_b[67] = {9074, 4478,  580, 580,  546, 584,  546, 586,  552, 578,  546, 582,  550, 582,  548, 582,  550, 582,  550, 1678,  548, 1680,  550, 1682,  552, 1680,  548, 580,  552, 1678,  552, 1676,  552, 1678,  548, 582,  550, 1680,  550, 582,  548, 582,  548, 582,  550, 578,  550, 584,  552, 578,  546, 1684,  552, 580,  552, 1674,  550, 1684,  548, 1678,  554, 1680,  546, 1686,  544, 1684,  550};
const uint16_t on_b[67] = {9066, 4478,  576, 580,  548, 582,  548, 582,  544, 586,  552, 578,  544, 582,  550, 582,  550, 582,  548, 1682,  548, 1676,  554, 1678,  552, 1676,  550, 582,  544, 1684,  550, 1680,  552, 1680,  544, 1682,  548, 1680,  548, 584,  552, 578,  552, 578,  552, 576,  554, 578,  552, 578,  550, 582,  552, 578,  546, 1680,  552, 1680,  544, 1686,  552, 1678,  546, 1682,  552, 1678,  550};

const uint16_t RED_all[67] = {9114, 4484,  572, 612,  522, 612,  522, 614,  522, 608,  526, 608,  522, 608,  526, 614,  526, 604,  526, 1684,  546, 1682,  550, 1682,  550, 1682,  550, 612,  522, 1686,  546, 1682,  550, 1682,  550, 612,  522, 612,  522, 1682,  550, 612,  522, 608,  526, 612,  520, 612,  522, 612,  524, 1680,  554, 1684,  550, 608,  522, 1684,  550, 1680,  550, 1684,  550, 1680,  554, 1682,  554};
const uint16_t GRN_all[67] = {9098, 4482,  578, 582,  548, 582,  548, 588,  548, 582,  550, 584,  550, 582,  550, 584,  550, 582,  554, 1680,  548, 1684,  548, 1684,  552, 1678,  552, 580,  550, 1678,  554, 1678,  558, 1676,  552, 1678,  554, 584,  546, 1680,  550, 588,  546, 584,  550, 580,  550, 584,  550, 584,  550, 582,  554, 1680,  546, 584,  550, 1680,  550, 1684,  552, 1676,  550, 1680,  550, 1684,  550};
const uint16_t BLU_all[67] = {9090, 4480,  578, 578,  550, 582,  550, 580,  554, 580,  550, 580,  550, 584,  548, 584,  552, 576,  554, 1680,  552, 1680,  550, 1676,  554, 1676,  554, 580,  550, 1684,  554, 1676,  550, 1680,  550, 584,  546, 1682,  550, 1682,  550, 580,  552, 580,  554, 578,  550, 580,  554, 584,  546, 1682,  550, 584,  548, 584,  550, 1680,  550, 1680,  550, 1678,  554, 1676,  554, 1680,  550};
const uint16_t WHT_all[67] = {9080, 4480,  574, 584,  550, 584,  546, 584,  546, 580,  554, 584,  550, 580,  550, 580,  550, 580,  550, 1684,  548, 1680,  550, 1678,  550, 1682,  550, 584,  546, 1682,  554, 1678,  550, 1682,  550, 1678,  554, 1682,  550, 1676,  550, 584,  550, 578,  554, 580,  550, 582,  548, 582,  550, 582,  550, 584,  550, 580,  550, 1682,  550, 1680,  550, 1678,  552, 1682,  550, 1678,  550};

const uint16_t ORNG_3[67] = {9096, 4480,  578, 580,  550, 584,  546, 584,  550, 580,  554, 580,  554, 580,  550, 580,  554, 578,  554, 1676,  554, 1678,  554, 1676,  554, 1678,  550, 584,  550, 1682,  550, 1674,  554, 1680,  554, 580,  550, 584,  550, 584,  554, 1674,  554, 576,  554, 584,  550, 580,  554, 580,  550, 1678,  558, 1676,  550, 1682,  552, 580,  554, 1678,  552, 1678,  554, 1676,  550, 1684,  552};
const uint16_t GRIN_3[67] = {9082, 4478,  580, 576,  552, 580,  552, 580,  550, 582,  550, 578,  554, 578,  550, 580,  554, 580,  550, 1676,  554, 1678,  552, 1680,  550, 1680,  550, 582,  550, 1678,  554, 1676,  550, 1682,  550, 1678,  554, 576,  554, 576,  554, 1680,  550, 580,  550, 584,  546, 580,  554, 576,  554, 576,  550, 1680,  554, 1676,  554, 576,  554, 1676,  550, 1684,  546, 1680,  550, 1682,  550};
const uint16_t BLU_3[67] = {9124, 4480,  578, 580,  550, 588,  552, 580,  554, 580,  554, 580,  556, 580,  550, 580,  554, 582,  554, 1678,  552, 1682,  554, 1680,  554, 1682,  550, 582,  554, 1678,  554, 1680,  554, 1678,  554, 582,  558, 1678,  554, 578,  554, 1678,  554, 580,  552, 584,  554, 580,  550, 588,  550, 1680,  554, 578,  554, 1682,  552, 580,  558, 1676,  554, 1680,  550, 1686,  550, 1678,  554};
const uint16_t FLASH_MODE[67] = {9096, 4474,  578, 582,  550, 578,  554, 580,  554, 580,  554, 580,  554, 576,  550, 584,  550, 584,  554, 1674,  554, 1678,  554, 1678,  550, 1680,  554, 580,  550, 1678,  558, 1672,  554, 1680,  552, 1680,  550, 1680,  552, 580,  556, 1676,  552, 580,  550, 580,  554, 576,  556, 580,  550, 580,  550, 584,  546, 1678,  554, 584,  550, 1678,  554, 1678,  554, 1676,  554, 1676,  554};

const uint16_t ORNG_2[67] = {9100, 4482,  572, 584,  550, 580,  552, 582,  554, 578,  550, 582,  550, 584,  548, 584,  550, 582,  550, 1682,  548, 1682,  554, 1676,  556, 1678,  550, 584,  550, 1678,  554, 1680,  550, 1682,  550, 580,  550, 584,  552, 1682,  550, 1676,  554, 584,  550, 580,  550, 582,  550, 580,  550, 1682,  554, 1678,  550, 584,  550, 584,  550, 1680,  548, 1680,  554, 1678,  548, 1684,  550};
const uint16_t GRIN_2[67] = {9064, 4480,  574, 584,  546, 584,  546, 580,  552, 580,  546, 580,  552, 582,  550, 578,  552, 580,  548, 1682,  554, 1674,  552, 1680,  550, 1680,  552, 574,  550, 1684,  550, 1678,  546, 1678,  550, 1682,  554, 576,  550, 1678,  550, 1678,  550, 584,  546, 584,  546, 584,  550, 580,  546, 588,  546, 1678,  550, 578,  554, 580,  544, 1682,  550, 1684,  546, 1676,  550, 1682,  546};
const uint16_t BLU_2[67] = {9062, 4500,  582, 576,  502, 604,  556, 604,  526, 576,  552, 604,  530, 578,  554, 576,  578, 552,  552, 1704,  528, 1702,  528, 1704,  554, 1652,  552, 604,  554, 1678,  526, 1706,  524, 1678,  554, 604,  530, 1674,  554, 1674,  556, 1730,  478, 628,  528, 574,  580, 576,  556, 550,  554, 1676,  580, 576,  528, 606,  524, 602,  556, 1652,  552, 1674,  558, 1674,  552, 1680,  554};
const uint16_t STROBE_MODE[67] = {9084, 4472,  608, 552,  554, 576,  556, 578,  578, 548,  584, 546,  590, 544,  554, 576,  582, 548,  554, 1678,  556, 1672,  558, 1672,  554, 1676,  586, 548,  554, 1676,  560, 1668,  534, 1698,  558, 1672,  584, 1646,  558, 1674,  556, 1674,  554, 578,  582, 548,  586, 546,  556, 576,  582, 548,  556, 576,  552, 578,  582, 576,  528, 1678,  554, 1676,  556, 1672,  558, 1674,  554};

const uint16_t ORNG_1[67] = {9024, 4526,  584, 548,  580, 550,  580, 552,  550, 580,  554, 576,  552, 608,  524, 578,  556, 600,  532, 1672,  556, 1702,  528, 1674,  582, 1650,  554, 602,  554, 1648,  556, 1700,  540, 1690,  554, 578,  554, 548,  556, 602,  528, 576,  582, 1648,  580, 552,  550, 578,  580, 576,  528, 1674,  556, 1674,  558, 1670,  560, 1672,  558, 602,  528, 1674,  580, 1650,  554, 1700,  532};
const uint16_t GRIN_1[67] = {9100, 4444,  584, 572,  582, 548,  582, 550,  586, 546,  580, 550,  558, 572,  560, 574,  584, 546,  556, 1674,  558, 1670,  560, 1670,  586, 1642,  584, 548,  560, 1668,  562, 1668,  582, 1648,  560, 1670,  586, 546,  586, 546,  588, 542,  584, 1646,  584, 548,  560, 570,  562, 570,  586, 544,  584, 1644,  560, 1670,  560, 1668,  560, 572,  586, 1642,  562, 1668,  560, 1670,  562};
const uint16_t BLU_1[67] = {9074, 4504,  558, 604,  526, 606,  526, 606,  528, 632,  472, 632,  558, 574,  530, 576,  560, 604,  528, 1702,  530, 1674,  554, 1678,  554, 1700,  530, 578,  560, 1696,  530, 1700,  528, 1706,  528, 602,  532, 1700,  530, 602,  530, 578,  554, 1706,  526, 630,  478, 628,  532, 576,  554, 1678,  554, 606,  528, 1702,  532, 1700,  526, 606,  528, 1676,  558, 1674,  556, 1702,  530};
const uint16_t FADE_MODE[67] = {9166, 4442,  614, 546,  588, 546,  588, 544,  588, 548,  586, 548,  560, 572,  590, 544,  590, 544,  588, 1644,  588, 1644,  588, 1646,  586, 1644,  588, 546,  586, 1622,  612, 1618,  614, 1644,  586, 1646,  566, 1666,  588, 546,  588, 546,  566, 1666,  564, 568,  566, 568,  588, 546,  570, 564,  566, 568,  564, 1668,  586, 1644,  590, 544,  590, 1642,  588, 1644,  590, 1644,  590};

const uint16_t ORNG_0[67] = {9120, 4440,  588, 572,  586, 546,  560, 574,  586, 544,  590, 544,  584, 550,  612, 520,  586, 548,  562, 1668,  562, 1670,  582, 1650,  562, 1670,  588, 546,  562, 1670,  562, 1668,  586, 1644,  586, 546,  562, 570,  562, 1668,  586, 548,  586, 1644,  588, 544,  590, 544,  560, 572,  562, 1668,  584, 1648,  560, 570,  588, 1644,  562, 570,  586, 1646,  612, 1618,  564, 1668,  566};
const uint16_t GRIN_0[67]= {9270, 4436,  624, 542,  596, 546,  596, 546,  594, 544,  594, 546,  596, 544,  596, 544,  594, 546,  596, 1616,  622, 1616,  620, 1644,  590, 1648,  598, 542,  598, 1640,  594, 1644,  592, 1644,  592, 1646,  596, 544,  594, 1644,  596, 544,  594, 1644,  596, 544,  596, 544,  594, 546,  594, 544,  594, 1642,  596, 546,  594, 1642,  598, 542,  594, 1642,  594, 1642,  594, 1644,  594};
const uint16_t BLU_0[67] = {9188, 4440,  618, 546,  590, 544,  590, 546,  568, 568,  590, 546,  590, 546,  590, 546,  590, 546,  590, 1642,  592, 1644,  590, 1644,  590, 1644,  590, 546,  590, 1642,  590, 1644,  588, 1644,  568, 568,  590, 1642,  590, 1644,  590, 546,  588, 1644,  590, 546,  588, 546,  566, 568,  590, 1642,  590, 546,  590, 546,  590, 1642,  590, 546,  590, 1644,  590, 1644,  592, 1644,  590};
const uint16_t SMOOTH_MODE[67] = {9190, 4442,  616, 546,  590, 546,  590, 546,  590, 546,  590, 546,  588, 546,  590, 546,  590, 544,  588, 1644,  590, 1642,  592, 1642,  590, 1642,  590, 546,  588, 1618,  616, 1642,  590, 1644,  590, 1642,  592, 1642,  588, 1644,  588, 546,  590, 1642,  590, 546,  588, 546,  590, 544,  588, 548,  588, 544,  590, 546,  588, 1644,  588, 548,  588, 1644,  588, 1644,  590, 1642,  590};


void setup()
{
  Serial.begin(115200);
  irsend.begin();

  WiFi.softAP("LED_CONTROL","ledledled");
  WiFi.mode(WIFI_AP);
  server.begin();
}

void loop() {
  WiFiClient client = server.available();
  
  if (client) {    
    while(client.connected()){      
      while (client.available()>0) {
        long x = micros();
        processCommand(client.readStringUntil('\r'));
        Serial.println(micros() - x);
      }
    }
    client.stop(); 
  }
}

void processCommand(String command_){
  int command = atoi(command_.c_str());
  
  if(command == 0){
    irsend.sendRaw(br_up, 67, 38);
  }else if(command == 1){
    irsend.sendRaw(br_down, 67, 38);
  }else if(command == 2){
    irsend.sendRaw(off_b, 67, 38);
  }else if(command == 3){
    irsend.sendRaw(on_b, 67, 38);
  }
  
  else if(command == 4){
    irsend.sendRaw(RED_all, 67, 38);
  }else if(command == 5){
    irsend.sendRaw(GRN_all, 67, 38);
  }else if(command == 6){
    irsend.sendRaw(BLU_all, 67, 38);
  }else if(command == 7){
    irsend.sendRaw(WHT_all, 67, 38);
  }
  
  else if(command == 8){
    irsend.sendRaw(ORNG_3, 67, 38);
  }else if(command == 9){
    irsend.sendRaw(GRIN_3, 67, 38);
  }else if(command == 10){
    irsend.sendRaw(BLU_3, 67, 38);
  }else if(command == 11){
    irsend.sendRaw(FLASH_MODE, 67, 38);
  }
  
  else if(command == 12){
    irsend.sendRaw(ORNG_2, 67, 38);
  }else if(command == 13){
    irsend.sendRaw(GRIN_2, 67, 38);
  }else if(command == 14){
    irsend.sendRaw(BLU_2, 67, 38);
  }else if(command == 15){
    irsend.sendRaw(STROBE_MODE, 67, 38);
  }
  
  else if(command == 16){
    irsend.sendRaw(ORNG_1, 67, 38);
  }else if(command == 17){
    irsend.sendRaw(GRIN_1, 67, 38);
  }else if(command == 18){
    irsend.sendRaw(BLU_1, 67, 38);
  }else if(command == 19){
    irsend.sendRaw(FADE_MODE, 67, 38);
  }
  
  else if(command == 20){
    irsend.sendRaw(ORNG_0, 67, 38);
  }else if(command == 21){
    irsend.sendRaw(GRIN_0, 67, 38);
  }  else if(command == 22){
    irsend.sendRaw(BLU_0, 67, 38);
  }else if(command == 23){
    irsend.sendRaw(SMOOTH_MODE, 67, 38);
  }
}
